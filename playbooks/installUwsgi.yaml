---
- name: Install and configure uWSGI for Flask app with Apache on Ubuntu
  hosts: localhost
  connection: local
  become: true

  tasks:
    - name: Install necessary packages
      ansible.builtin.apt:
        name:
          - python3-venv
          - python3-pip
          - apache2
          - libapache2-mod-proxy-uwsgi
        state: latest
        update_cache: yes

    - name: Enable proxy module
      ansible.builtin.shell:
        cmd: a2enmod proxy
      notify: reload apache2

    - name: Enable proxy_uwsgi module
      ansible.builtin.shell:
        cmd: a2enmod proxy_uwsgi
      notify: reload apache2

    - name: Create Python virtual environment for Flask app
      ansible.builtin.command:
        cmd: python3 -m venv /var/www/html/venv
        creates: /var/www/html/venv

    - name: Install Flask and uWSGI in virtual environment
      ansible.builtin.pip:
        name:
          - Flask
          - uwsgi
        virtualenv: /var/www/html/venv

    - name: Create uWSGI configuration file
      ansible.builtin.copy:
        dest: /var/www/html/uwsgi.ini
        content: |
          [uwsgi]
          module = search:app

          master = true
          processes = 5

          socket = /var/www/html/search.sock
          chmod-socket = 660
          vacuum = true

          die-on-term = true
        mode: "0644"

    - name: Get IP address of enp0s8 and fail if not found
      shell: |
        ip -4 addr show enp0s8 | grep -oP '(?<=inet\s)\d+(\.\d+){3}' || { echo "IP address not found"; exit 1; }
      register: IP
      failed_when: "'IP address not found' in IP.stdout or IP.rc != 0"

    - name: Configure Apache to proxy requests to uWSGI
      ansible.builtin.blockinfile:
        path: /etc/apache2/sites-available/search.conf
        create: yes
        block: |
          <VirtualHost *:80>
              ServerName {{ IP.stdout }}

              <Directory /var/www/html>
                  Require all granted
              </Directory>

              <Location />
                  ProxyPass unix:/var/www/html/search.sock|uwsgi://search
              </Location>
          </VirtualHost>
      diff: true
      notify: reload apache2

    - name: Enable the Apache site configuration
      ansible.builtin.command:
        cmd: a2ensite search.conf
      notify: reload apache2

    - name: Create systemd service file for uWSGI
      ansible.builtin.copy:
        dest: /etc/systemd/system/search_uwsgi.service
        content: |
          [Unit]
          Description=uWSGI instance to serve search
          After=network.target

          [Service]
          User=www-data
          Group=www-data
          WorkingDirectory=/var/www/html
          Environment="PATH=/var/www/html/venv/bin"
          ExecStart=/var/www/html/venv/bin/uwsgi --ini /var/www/html/uwsgi.ini

          [Install]
          WantedBy=multi-user.target
        mode: "0644"
      notify: start search_uwsgi

  handlers:
    - name: reload apache2
      ansible.builtin.systemd:
        name: apache2
        state: reloaded

    - name: start search_uwsgi
      ansible.builtin.systemd:
        name: search_uwsgi
        enabled: yes
        state: started
